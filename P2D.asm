	processor 6502	

	org $1001	
	hex 0c 10 0a 00 9e 20 34 31 31 30 00 00 00

;Globals	
CURRENTWEAPON = $1000	;01 is sword 02 is arrow 04 is rock
HEALTH = $1001
MEAT = $1002
GOLD = $1003
XCOORD = $1004
YCOORD = $1005
XROOM = $1006
YROOM = $1007			; -Note: might fit into 1 Byte if 16x16
FACING = $100B			;1 up, 2 right, 4 down, 8 left
NESW = $100D
ROUND = $100C
TIMER = $2F
DAYNIGHT = $1F

BASESTATUS = $1008		; (bit 0 = Alter Built, bit1 = Pentagram Built,...)
PLANSSTATUS = $1009 	; (bit 0 = Alter Plans, bit1 = Pentagram Plans,...)
PLANROOMNO = $100A		; Room with current plans to buy

NOTE1 = $900A
NOTE2 = $900B
NOTE3 = $900C
VOLUME = $900E

RANDOM = $9114
RANDOM2 = $9118


JOYSTICK1 = $9111		;Important Memory Locations
JOYSTICK2 = $9120		;
DDR1 = $9113			;
DDR2 = $9122			;

HIGHORDER = $02			;Zero page addressing high and low bits scratch space
LOWORDER = $01			;Used for addressing memory with offsets

COUNTER = $04			;Zero Page Counter stractch space
COUNTER2 = $03			;

FNARG1 = $05			;Function Argument Memory Locations
FNARG2 = $06			;
FNARG3 = $07			;Functions as scratch space

RETARG1 = $08			;Function Argument Return Memory Locations
RETARG2 = $09			;
RETARG3 = $0A			;Functions as scratch space

ENEMYLIST = $D0


;Constants
OLDMAN = $01
DOOR = $02
TREE = $03
GOOMBA1 = $04
GOOMBA2 = $05
GOOMBA3 = $06
GOOMBA4 = $07
BOSS1 = $08
BOSS2 = $09
BOSS3 = $0A
BOSS4 = $0B
FOOD = $0C
BADFOOD = $0D
COIN = $0E
BADCOIN = $0F
ALTAR = $10
SUMMON = $11
DEN = $12
FIRE = $13
BONES = $14
GEM = $15
WEB = $16
BLOOD = $17
PLAYER0 = $18		;skull
PLAYER1 = $19	
PLAYER2 = $1A
PLAYER3 = $1B
SWORDV = $1C
SWORDH = $1D
ROCK = $1E



;=========================\/	

	LDA #$00
	STA BASESTATUS
	STA PLANSSTATUS
	STA TIMER
	
	JMP TITLESCREEN
	
PLAYERINIT
	LDA #$01					;set gold etc. 
	STA CURRENTWEAPON
	LDA #$00
	STA GOLD
	STA MEAT
	STA DAYNIGHT
	
	LDA #$03					;set health to 16
	STA HEALTH
	
 	LDA #$08					
	STA YCOORD 					;SET PLAYER Y COORD 
	STA YROOM	
	STA XCOORD					;SET PLAYER X COORD 
	STA XROOM					;set room to 8,8

	
SYSTEMINIT
	SEI
	LDA #$00					;INPUT FOR DDR1 IS 00
	STA DDR1					;SET DDR1 TO INPUT
	STA COUNTER
	STA COUNTER2

;==========BEGIN GAME======
	JMP CUSTGRAPHICS
	

;======JOYSTICK INPUT===================

	
LOOP
	INC TIMER
	LDA TIMER
	CMP #$00
	BEQ INVERT
	
	
	LDA #$7F					;INPUT FOR DDR2 IS 7F					
	STA DDR2					;SET DDR2 TO INPUT
	LDA JOYSTICK2				;LOOK AT JOYSTICK SWITCH 3
	ASL							;SHIFT IT LEFT
	BCC RIGHTPOINTER			;IF THE CARRY WAS NOT SET, THEN THE BUTTON WAS PRESSED
	LDA #$FF					;WE HAVE TO RESET DDR2 TO ALLOW FOR KEYBOARD INPUT
	STA DDR2					;""
	
CHECKFIRE
	LDA JOYSTICK1					;LOAD JOYSTICK1
	ASL						;WANT TO PUT THE BUTTONS IN BIT 7 FOR EASY BRANCH
	ASL						;
	ASL						;LAST SHIFT SETS CARRY IF BUTTON IS NOT PRESSED
	BCC FIREPOINTER
CHECKLEFT
	ASL						;SETS CARRY IF BUTTON NOT PRESSED
	BCC LEFTPOINTER
CHECKDOWN
	ASL						;SETS CARRY IF BUTTON NOT PRESSED
	BCC DOWNPOINTER
CHECKUP
	ASL						;SETS CARRY IF BUTTON NOT SET
	BCC UPPOINTER
	JMP ENEMYMOVE

INVERT
	JMP INVERTDAY
	
RIGHTPOINTER
	JMP RIGHTPRESSED
LEFTPOINTER
	JMP LEFTPRESSED
UPPOINTER
	JMP UPPRESSED
DOWNPOINTER
	JMP DOWNPRESSED
FIREPOINTER
	JMP FIREPRESSED
	
	
INVERTDAY
	LDA DAYNIGHT
	CMP #$00
	BEQ SETNIGHT
SETDAY
	LDA #$00
	STA DAYNIGHT
	STA FNARG3
	JSR CLEARCOLOUR
	JMP LOOP
SETNIGHT
	LDA #$09
	STA DAYNIGHT
	STA FNARG3
	LDA MEAT
	BEQ SETNIGHTCOL
	DEC MEAT	
SETNIGHTCOL	
	JSR CLEARCOLOUR
	JMP DRAWSCORE	
;=====================================================
	
ENEMYMOVE
	INC ROUND
	LDA ROUND
	AND #$0F
	STA ROUND
	
	LDA #$01
	STA FNARG1
	STA FNARG2
	STA ENEMYLIST
	
ENEMYLOOP

	JSR FINDATXY
	CMP #GOOMBA1
	BMI NOENEMY
	CMP #FOOD
	BPL NOENEMY
	JMP LISTENEMY

NOENEMY
	LDA FNARG1
	CMP #$11
	BEQ ENEMYMOVEY
	INC FNARG1
	JMP ENEMYLOOP
	
ENEMYMOVEY
	LDA FNARG2
	CMP #$11
	BEQ DONEENEMYSCAN
	LDA #$01
	STA FNARG1
	INC FNARG2
	JMP ENEMYLOOP

DONEENEMYSCAN	
	JMP MOVEENEMIES

LISTENEMY	
	CLC
	SBC #TREE			;ENEMY CHAR - 4	
	SBC ROUND			;CHECK IF ROUND TO MOVE ENEMY
	BMI NOENEMY			;DON'T LIST IF ENEMY # TOO SMALL

	LDA FNARG1
	LDX ENEMYLIST
	STA ENEMYLIST,X
	INX
	LDA FNARG2
	STA ENEMYLIST,X
	INX
	STX ENEMYLIST
	JMP NOENEMY
	
DONEMOVE	
	
	JMP LOOP
	
MOVEENEMIES
	
	LDX ENEMYLIST
	DEX
	BEQ DONEMOVE
	
	LDA ENEMYLIST,X
	STA RETARG2
	STA FNARG2
	DEX
	LDA ENEMYLIST,X
	STX ENEMYLIST
	STA RETARG1
	STA FNARG1
	JSR FINDATXY
	STA FNARG3
	
	LDA RANDOM
	ROR
	BCS ENEMYMOVEHORZ
	JMP ENEMYMOVEVERT
	
ENEMYMOVEHORZ
	LDA FNARG2
	CMP YCOORD
	BEQ ENEMYMOVEVERT
	BMI ENEMYMOVEEAST
	JMP ENEMYMOVEWEST
	
ENEMYMOVEVERT
	LDA FNARG1
	CMP XCOORD
	BEQ ENEMYMOVEHORZ
	BMI ENEMYMOVESOUTH
	JMP ENEMYMOVENORTH
	

ENEMYMOVEWEST
	DEC FNARG2
	JMP MOVEDIR
ENEMYMOVEEAST
	INC FNARG2
	JMP MOVEDIR
ENEMYMOVESOUTH
	INC FNARG1
	JMP MOVEDIR
ENEMYMOVENORTH
	DEC FNARG1
	JMP MOVEDIR
	
PLACEENEMY
	LDY FNARG2
	LDX FNARG1
	JSR PRINTCHAR
	LDA #$00
	STA FNARG3
	LDY RETARG2
	LDX RETARG1
	JSR PRINTCHAR
	JMP MOVEENEMIES
	
HITTHEPLAYER
	JMP LOSELIFE
	
MOVEDIR
	JSR FINDATXY
	BEQ PLACEENEMY
	CMP #PLAYER1
	BMI DONOTMOVEENEMY
	CMP #SWORDV
	BMI HITTHEPLAYER
DONOTMOVEENEMY
	JMP MOVEENEMIES
	
;==========JOYSTICK ACTIONS=========================================================	
RIGHTPRESSED
	LDA #$FF					;WE HAVE TO RESET DDR2 TO ALLOW FOR KEYBOARD INPUT
	STA DDR2					;""
	LDA #$02					;We are facing east
	STA FACING
	LDA #$00
	STA NESW
	LDX XCOORD
	LDY YCOORD
	INY
	STX FNARG1
	STY FNARG2
	JSR FINDATXY
	CMP #$00
	BEQ DORIGHT
	JMP COLLISION
DORIGHT
	JSR CLEARAVATAR
	INC YCOORD
	JSR PRINTAVATAR
	JMP BUTTONWASPRESSED					;WE WANT TO LOOP THIS INDEFINITELY
	
FIREPRESSED
	LDX XCOORD
	LDY YCOORD							;WE currently hold an unknown weapon. abort
	JMP USESWORD
	
UPPRESSED
	LDA #$01								;We are facing north
	STA FACING
	STA NESW
	LDX XCOORD
	LDY YCOORD
	DEX
	STX FNARG1
	STY FNARG2
	JSR FINDATXY
	CMP #$00
	BEQ DOUP
	JMP COLLISION
DOUP	
	JSR CLEARAVATAR
	DEC XCOORD
	JSR PRINTAVATAR
	JMP BUTTONWASPRESSED
	
DOWNPRESSED
	LDA #$04								;We are facing south
	STA FACING
	LDA #$01
	STA NESW
	LDX XCOORD
	LDY YCOORD
	INX
	STX FNARG1
	STY FNARG2
	JSR FINDATXY
	CMP #$00
	BEQ DODOWN
	JMP COLLISION
DODOWN
	JSR CLEARAVATAR
	INC XCOORD
	JSR PRINTAVATAR	
	JMP BUTTONWASPRESSED
	
LEFTPRESSED
	LDA #$08								;We are facing west
	STA FACING
	LDA #$00
	STA NESW
	LDX XCOORD
	LDY YCOORD
	DEY
	STX FNARG1
	STY FNARG2
	JSR FINDATXY
	CMP #$00
	BEQ DOLEFT
	JMP COLLISION
DOLEFT
	JSR CLEARAVATAR
	DEC YCOORD
	JSR PRINTAVATAR
	JMP BUTTONWASPRESSED
	
BUTTONWASPRESSED
	
	JMP ENEMYMOVE

WAIT
	LDA #$00
	STA COUNTER
	STA COUNTER2
WAITLOOP
	INC COUNTER
	LDA COUNTER
	CMP #$32
	BNE WAITLOOP
	LDA #$00
	STA COUNTER
	INC COUNTER2
	LDA COUNTER2
	CMP #$FF
	BNE WAITLOOP

	RTS					;LOOP
;======================================================================


	
;===COLLISION DETECTION HANDLING====================================
COLLISION
	CMP #OLDMAN
	BEQ HITOLDMANJMP
	CMP #DOOR
	BEQ CHANGEROOMJMP
	CMP #TREE
	BEQ BACKTOLOOPJMP
	CMP #FOOD					;IF val less than food (goomba/boss) then loselife
	BMI LOSELIFEJMP
	BEQ GAINFOODJMP
	CMP #BADFOOD					;hit a bad food 
	BEQ BADGUMBOJMP
	CMP #COIN					;hit a coin
	BEQ GAINCOINJMP
	CMP	#BADCOIN					;hit a bad coin
	BEQ BADGUMBOJMP
	CMP #PLAYER0
	BMI ARTIFACTJUMP
	CMP #SWORDV					;IF val less than sword(objects below sword) then nothing
	BMI BACKTOLOOPJMP
	BEQ PICKUPITEMJMP
	CMP #ROCK
	BEQ PICKUPITEMJMP

HITOLDMANJMP
	JMP HITOLDMAN
CHANGEROOMJMP
	JMP CHANGEROOM
GAINFOODJMP
	JMP GAINFOOD
LOSELIFEJMP
	JMP LOSELIFE
GAINCOINJMP
	JMP  GAINCOIN
BADGUMBOJMP
	JMP BADGUMBO
ARTIFACTJUMP
	JMP HITARTIFACT
BACKTOLOOPJMP
	JSR WAIT
	JMP LOOP
PICKUPITEMJMP
	JMP PICKUPITEM
;=============
HITARTIFACT
	STA RETARG1
	SEC
	SBC #ALTAR
	STA RETARG3
	TAX
	JSR INTTOBIN
	AND BASESTATUS
	BNE ARTIFACTDONE
	LDX RETARG3
	JSR INTTOBIN
	AND PLANSSTATUS
	BNE PLANDONE
	LDA RETARG1
	STA FNARG3
	LDX #$14
	LDY #$05
	JSR PRINTCHAR
	LDA #OLDMAN
	STA FNARG3
	LDX #$14
	LDY #$07
	JSR PRINTCHAR
	LDA #$00								;CLEAR OLD TXT
	STA FNARG3
	LDX #$14
	LDY #$08
	JSR PRINTCHAR
	LDX #$14
	LDY #$0A
	JSR PRINTCHAR
	LDX #$14
	LDY #$0B
	JSR PRINTCHAR
	JMP DRAWSCORE
	
ARTIFACTDONE	
	LDA #$00				;CLEAR TXT
	STA FNARG3
	LDX #$14
	LDY #$08
	JSR PRINTCHAR
	LDX #$14
	LDY #$0A
	JSR PRINTCHAR
	LDX #$14
	LDY #$0B
	JSR PRINTCHAR
	LDA #PLAYER1			;DRAW HAPPY IF HAVE PLAN
	STA FNARG3
	LDX #$14
	LDY #$07
	JSR PRINTCHAR
	LDA RETARG1
	STA FNARG3
	LDX #$14
	LDY #$05
	JSR PRINTCHAR
	JMP DRAWSCORE	
NOFLOW
	LDA RETARG1
	STA FNARG3
	LDX #$14
	LDY #$05
	JSR PRINTCHAR
	JMP homNOFLOW
PLANDONE
	LDA MEAT
	CMP #$09
	BNE NOFLOW
	LDA GOLD
	CMP #$09
	BNE NOFLOW
	LDX RETARG3
	JSR INTTOBIN
	ORA BASESTATUS
	STA BASESTATUS
	LDA #$00
	STA MEAT
	STA GOLD
	LDA #$09
	STA VOLUME
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE1
	JSR CLEARCOLOUR
	JSR WAIT
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE2
	JSR CLEARCOLOUR
	JSR WAIT
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE3
	JSR CLEARCOLOUR
	JSR WAIT
	LDA RANDOM
	SEC
	ROR
	STA NOTE1
	JSR WAIT
	JSR WAIT
	LDA #$00
	STA FNARG3
	JSR CLEARCOLOUR
	LDA BASESTATUS
	CMP #$FF
	BEQ GG	
	LDA #$00
	STA VOLUME
	JMP DRAWBOARD
	
GG
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE1
	JSR CLEARCOLOUR
	JSR WAIT
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE2
	JSR CLEARCOLOUR
	JSR WAIT
	LDA RANDOM
	STA FNARG3
	SEC
	ROR
	STA NOTE3
	JSR CLEARCOLOUR
	JSR WAIT
	JMP GG
	
PICKUPITEM
	JSR WAIT
	JMP DRAWSCORE
CHANGEROOM
	JMP CHANGEROOMS
HITOLDMAN ;\/
	LDA XROOM
	CLC
	ADC YROOM
	AND #$07	
	STA RETARG3	
	CLC
	ADC #ALTAR
	STA FNARG3
	LDX #$14
	LDY #$05
	JSR PRINTCHAR
	LDX RETARG3
	JSR INTTOBIN
	AND PLANSSTATUS
	BEQ homNOPLAN
	LDA #PLAYER1			;DRAW HAPPY IF HAVE PLAN
	STA FNARG3
	LDX #$14
	LDY #$07
	JSR PRINTCHAR
	JMP DRAWSCORE	
	
homNOPLAN
	LDA MEAT
	CMP #$09
	BNE homNOFLOW
	LDA GOLD
	CMP #$09
	BNE homNOFLOW
	LDX RETARG3
	JSR INTTOBIN
	ORA PLANSSTATUS
	STA PLANSSTATUS
	LDA #$00
	STA MEAT
	STA GOLD
	STA FNARG3
	LDX #$14
	LDY #$08
	JSR PRINTCHAR
	LDX #$14
	LDY #$0A
	JSR PRINTCHAR
	LDX #$14
	LDY #$0B
	JSR PRINTCHAR
	
	JMP HITOLDMAN
	
homNOFLOW
	LDX #$14
	LDY #$07
	LDA #FOOD
	STA FNARG3
	JSR PRINTCHAR
	LDX #$14
	LDY #$08
	LDA MEAT
	CLC
	ADC #$30
	STA FNARG3
	JSR PRINTCHAR
	LDX #$14
	LDY #$0A
	LDA #COIN
	STA FNARG3
	JSR PRINTCHAR
	LDX #$14
	LDY #$0B
	LDA GOLD
	CLC
	ADC #$30
	STA FNARG3
	JSR PRINTCHAR
		
	JMP DRAWSCORE
	
LOSELIFE 						;WHAT HAPPENS WHEN WE TOUCH AN ENTITY
	LDA #PLAYER0
	STA RETARG2
	LDA HEALTH ;CHANGE THIS TO DEC TO LOSE LIFE PROPERLY
	LDA HEALTH
	CMP #$00
	BEQ DEATH
	LDA #$09
	STA VOLUME
	LDA #$E1
	JSR WAIT					;PLACEHOLDERS FOR NOW
	LDA #$00
	STA VOLUME
	JMP DRAWSCORE
DEATH
	JSR PRINTAVATAR
	LDA #$09
	STA VOLUME
	LDA #$E1
	STA NOTE1
	JSR WAIT
	LDA #$E4
	STA NOTE1
	JSR WAIT
	LDA #$E3
	STA NOTE1
	JSR WAIT
	LDA #$E1
	STA NOTE1
	JSR WAIT
	LDA #$D9
	STA NOTE1
	JSR WAIT
	LDA #$CF
	STA NOTE1
	JSR WAIT
	LDA #$C7
	STA NOTE1
	JSR WAIT
	LDA #$C3
	STA NOTE1
	JSR WAIT
	LDA #$C3
	STA NOTE1
	JSR WAIT
	LDA #$C3
	STA NOTE1
	JSR WAIT
	LDA #$00
	STA VOLUME
	LDA RETARG2
	STA FNARG3
	JSR CLEARCHARS					;clears screen chars
FOREVERDEATH
	JSR WAIT
	JSR WAIT	
	LDA $9114
	STA FNARG3
	JSR CLEARCOLOUR					;clears screen colours
	LDA JOYSTICK1					;LOAD JOYSTICK1
	ASL						;WANT TO PUT THE BUTTONS IN BIT 7 FOR EASY BRANCH
	ASL						;
	ASL						;LAST SHIFT SETS CARRY IF BUTTON IS NOT PRESSED
	BCC RESTARTGAME
	JMP FOREVERDEATH
RESTARTGAME
	JMP PLAYERINIT
	
BADGUMBO
	LDX FNARG1
	LDY FNARG2
	LDA #$00
	STA FNARG3
	JSR PRINTCHAR
	JMP LOSELIFE
GAINFOOD
	LDX FNARG1
	LDY FNARG2
	LDA #$00
	STA FNARG3
	JSR PRINTCHAR
	LDA MEAT
	CMP #$09
	BEQ FULLFOOD
	INC MEAT	
FULLFOOD
	LDA #$09
	STA VOLUME
	LDA #$E1
	STA NOTE1
	JSR WAIT
	LDA #$FF
	STA NOTE1
	JSR WAIT
	LDA #$00
	STA VOLUME
	JSR WAIT					
	JMP DRAWSCORE
GAINCOIN	
	LDX FNARG1
	LDY FNARG2
	LDA #$00
	STA FNARG3
	JSR PRINTCHAR
	LDA GOLD
	CMP #$09
	BEQ FULLGOLD
	INC GOLD
FULLGOLD
	LDA #$09
	STA VOLUME
	LDA #$90
	STA NOTE2
	JSR WAIT
	LDA #$FF
	STA NOTE2
	JSR WAIT
	LDA #$00
	STA VOLUME
	JSR WAIT	
	JMP DRAWSCORE
CHANGEROOMS
	LDA XCOORD
	CMP #$01
	BEQ ROOMUP
	CMP #$10
	BEQ ROOMDOWN
	LDA YCOORD
	CMP #$01
	BEQ ROOMLEFT
	CMP #$10
	BEQ ROOMRIGHT

ROOMUP
	LDA #$10
	STA XCOORD
	DEC XROOM
	JMP DRAWBOARD
ROOMDOWN
	LDA #$01
	STA XCOORD
	INC XROOM
	JMP DRAWBOARD
ROOMLEFT
	LDA #$10
	STA YCOORD
	DEC YROOM
	JMP DRAWBOARD
ROOMRIGHT
	LDA #$01
	STA YCOORD
	INC YROOM
	JMP DRAWBOARD


;=========================================================================
	

;=========USE SWORD================================
USESWORD
	LDX XCOORD
	LDY YCOORD
	LDA FACING
	CLC
	LSR
	BCS USENORTH
	LSR
	BCS USEEAST
	LSR
	BCS USESOUTH
	LSR
	BCS USEWEST
	JMP LOOP				;if we face an unknown direction, abort

USENORTH
	DEX
	JMP CHECKHIT
USEEAST
	INY
	JMP CHECKHIT
USESOUTH
	INX
	JMP CHECKHIT
USEWEST
	DEY
	JMP CHECKHIT
	
CHECKHIT
	STX FNARG1
	STY FNARG2
	JSR FINDATXY
	CMP #$00
	BEQ EMPTYSWING
	CMP #GOOMBA1			;Values less than goomba cant be hit
	BMI CANTHIT				;Can't cut down trees
	CMP #ALTAR				;Value less than altar can be hit
	BMI HITENEMY			;hit a coin or a food
	JMP CANTHIT				;Everything else we cant hit
	
EMPTYSWING
	LDX FNARG1
	LDY FNARG2				;SET TO TARGET
	LDA NESW
	CMP #$01
	BMI SWORDHORZ1
	LDA #SWORDV
	CLC
	BCC CONT1
SWORDHORZ1
	LDA #SWORDH
CONT1
	STA FNARG3
	JSR PRINTCHAR
	JSR WAIT
	LDX FNARG1
	LDY FNARG2
	LDA #$00
	STA FNARG3
	JSR PRINTCHAR
	
	
CANTHIT						;Same as do nothing because you can't hit what you're trying to hit.
	JMP LOOP

HITENEMY					;Pass in the enemy's x and y coords to a function which then performs the hit on that enemy	
	JMP PERFORMHIT	

;===================================================


;======ENEMY/ITEM HIT WITH SWORD=================================
;==was an enemy, make it randomly drop a coin/food(good or bad)==
;==if it was an item, destroy it. If it was a boss===============
;==Reduce it's health by one.====================================
PERFORMHIT
	
	STA RETARG1				;Preserve char to be hit
	
	LDX FNARG1				;SWING SWORD
	LDY FNARG2				;SET TO TARGET
	LDA NESW
	CMP #$01
	BMI SWORDHORZ
	LDA #SWORDV
	CLC
	BCC CONT
SWORDHORZ
	LDA #SWORDH
CONT
	STA FNARG3
	JSR PRINTCHAR			;PRINT SWORD
	JSR WAIT
	LDX FNARG1				;HIDE SWORD
	LDY FNARG2
	LDA #$00
	STA FNARG3
	JSR PRINTCHAR
	
	LDA RETARG1
	CMP #BOSS1				;Was it an enemy? (Less than boss1) Dont need to worry other vals (e.x. old man) as we only ever get here by swinging at stuff capable of being broken
	BMI KILLEDENEMY
	CMP #FOOD				;Was it a boss? (less than food)
	BMI	HITBOSS				
	CMP #ALTAR			;Was it an item?
	BMI DONOTHING				

DONOTHING					;Easiest, since draw sword leaves the tile blank, we literally do nothing
	JMP LOOP
KILLEDENEMY
	LDA $9114
	LSR
	BCS DONOTHING			;does nothing
	LSR
	BCS DONOTHING
	BCC DROPITEM
	JMP LOOP				;If no item drops, we simply jump out
	
;---------------------------------------------------------------------------------
HITBOSS
	CMP #BOSS2
	BPL DECBOSS
	JMP KILLEDENEMY
DECBOSS
	LDX FNARG1				;HIDE SWORD
	LDY FNARG2
	STA FNARG3
	DEC FNARG3
	JSR PRINTCHAR
	JMP LOOP				
;---------------------------------------------------------------------------------

DROPITEM
	LDA $9114				;Grab the timer for an independant random number
	ASL
	BCS	DROPFOODTYPE
	BCC DROPCOINTYPE
;----Remember FNARG1 and FNARG2 are still unscathed
DROPFOODTYPE
	ASL
	BCS DROPPCOIN
	BCC DROPCOIN
DROPCOINTYPE
	ASL
	BCS DROPPFOOD
	BCC DROPFOOD
DROPPFOOD
	LDA #BADFOOD					;We drop a poison candy
	JMP PUTBACK
DROPPCOIN
	LDA #BADCOIN					;We drop a poision coin
	JMP PUTBACK
DROPFOOD
	LDA #FOOD					;We drop actual food
	JMP PUTBACK
DROPCOIN
	LDA #COIN					;We drop actual coin
PUTBACK
	LDX FNARG1
	LDY FNARG2
	STA FNARG3
	JSR PRINTCHAR
	JMP LOOP
;=================================================

;===================================================

INTTOBIN						;TAKES AN INT IN X AND RETURNS A BIN WITH BIT X SET TO 1
	LDA #$01
ibLOOP
	CPX #$00
	BEQ bitRETURN
	CLC
	ROL
	DEX
	JMP ibLOOP
	
BINTOINT						;TAKES A BIN IN ACC AND RETURNS AN INT IN X 
	LDX #$00
biLOOP
	CMP #$00
	BEQ bitRETURN
	CLC
	ROR
	INX
	JMP biLOOP
	
bitRETURN
	RTS
;=====CHECKS AT X,Y===============
FINDATXY						;returns the object at y,x in A
	LDX FNARG1
	LDY FNARG2
	
	LDA #$1E						;high order screen mem address low in $02
	STA $02
	LDA #$00
	STA $01
		

checkvLOOP
	CPX #$00
	BEQ checkvRETURN
	CLC
	ADC #$16
	STA $01
	BCS checkvINCX
checkvDONEX	
	DEX
	JMP checkvLOOP
checkvINCX	
	INC $02
	JMP checkvDONEX

checkvRETURN
	LDA ($01),Y	
	RTS
;=========================



;=========================
DRAWBOARD

	LDA #$00
	STA FNARG3
	JSR CLEARCHARS					;clears screen chars 
	
	LDA DAYNIGHT
	STA FNARG3
	JSR CLEARCOLOUR					;clears screen colours
	
	LDX #$00
	LDY #$00
	
	LDA XROOM
	CMP #$08
	BNE drawbDOWALLS	
	LDA YROOM
	CMP #$08
	BNE drawbDOWALLS
	
	LDA #$00
	STA RETARG1
	JMP drawbWALL
	
drawbDOWALLS
	LDA RANDOM
	AND #$0F
	CMP #$0F
	BEQ drawbDOWALLS
	STA RETARG1
	JMP drawbWALL
	
drawbLOOP
	STX COUNTER					;store x,y in counter 
	STY COUNTER2					
	JSR PRINTCHAR				; print tree at y,x
	LDX COUNTER					;GET X AND Y BACK, AS PRINT C STEPS ON X/YREG
	LDY COUNTER2
	
	
	INY							; move right one
	CPY #$07					; check if at top/bottom
	BEQ drawbDOOR				; switch char if is door	
	CPY #$0B					; check if at top/bottom
	BEQ drawbWALL				; switch char if door done

	CPY #$12
	BEQ drawbNEXTROW			;branch border next row on y=16

	CPX #$00					;loop if first or last row
	BEQ drawbLOOP
	CPX #$11				
	BEQ drawbLOOP
	
	LDY #$11					; ADD 15 to y if in middle row 

	JMP drawbLOOP	

drawbDOOR
	ROR RETARG1
	BCS drawbLOOP
	LDA #DOOR
	STA FNARG3				;put tree in printchar char arg
	JMP drawbLOOP


drawbWALL
	LDA #TREE
	STA FNARG3				;put tree in printchar char arg
	JMP drawbLOOP

drawbNEXTROW
	INX
	CPX #$12
	BEQ boardDONE
	LDY #$00
	CPX #$0B				; CHECK FOR HORIZONTAL DOOR	
	BPL drawbLOOP			; switch char if is door
	CPX #$07				; CHECK FOR HORIZONTAL DOOR	
	BMI drawbLOOP			; switch char if is door
;----\/

drawbHODOOR
	ROR RETARG1
	BCS drawbHDLOOP
	LDA #$02
	STA FNARG3				;put tree in printchar char arg
	JMP drawbHDLOOP	
	
drawbODOOR
	LDA #$03
	STA FNARG3
	CPY #$11
	BEQ drawbLOOP
	LDX #$06
	LDY #$11
	JMP drawbHODOOR
	
drawbHDLOOP
	
	STX COUNTER					;store x,y in counter 
	STY COUNTER2					
	JSR PRINTCHAR				; print tree at y,x
	LDX COUNTER					;GET X AND Y BACK, AS PRINT C STEPS ON X/YREG
	LDY COUNTER2
	
	CPX #$0A					; check if at top/bottom
	BPL drawbODOOR			; switch char if is door
	
	INX
	
	JMP drawbHDLOOP
	

boardDONE
	JMP POPULATEROOM
;=========================\/



;=========================
POPULATEROOM
	
	LDA #$00
	STA RETARG1
	STA RETARG2
	STA RETARG3
	
	LDA XROOM
	CMP #$08
	BMI proomAWAYNX
	BNE proomAWAYPX
	LDA YROOM
	CMP #$08	
	BEQ proomGOBASE
proomYCHECK
	BMI proomAWAYNY
	BNE proomAWAYPY
	JMP proomPOPAWAY

	
proomGOBASE
	jmp proomBASE
 
proomAWAYNX
	LDA #$08
	SEC
	SBC XROOM	
	STA RETARG1					
	STA RETARG2
	LDX #$13
	LDY #$14
	LDA #SWORDH
	STA FNARG3
	JSR PRINTCHAR
	JMP proomCHECKY
	
proomAWAYPX
	LDA #$F8
	CLC
	ADC XROOM
	STA RETARG1
	STA RETARG2
	LDX #$13
	LDY #$14
	LDA #SWORDV
	STA FNARG3
	JSR PRINTCHAR
	
proomCHECKY
	LDA YROOM
	CMP #$08	
	JMP proomYCHECK

proomAWAYNY
	LDA #$08
	SEC
	SBC YROOM
	STA RETARG3
	CLC
	ADC RETARG1
	STA RETARG1
	LDX #$13
	LDY #$12
	LDA #SWORDH
	STA FNARG3
	JSR PRINTCHAR
	JMP proomPOPAWAY
	
proomAWAYPY
	LDA #$F8
	CLC
	ADC YROOM
	STA RETARG3
	CLC
	ADC RETARG1
	STA RETARG1
	LDX #$13
	LDY #$12
	LDA #SWORDV
	STA FNARG3
	JSR PRINTCHAR
	
proomPOPAWAY

	LDA RETARG2
	BEQ proomLOADY
	CLC
	ADC #$30
	CMP #$3A
	BMI XOK
	LDA #PLAYER0
XOK
	STA FNARG3
	LDX #$13
	LDY #$15
	JSR PRINTCHAR
	
proomLOADY
	LDA RETARG3
	BEQ proomLOADD
	CLC
	ADC #$30
	CMP #$3A
	BMI YOK
	LDA #PLAYER0
YOK
	STA FNARG3
	LDX #$13
	LDY #$13
	JSR PRINTCHAR

proomLOADD
	LDX #$13					;DRAW ROOM DIFFICULTY
	LDY #$11					
	LDA #$30
	CLC
	ADC RETARG1
	CMP #$3A
	BMI DOK
	LDA #PLAYER0
DOK
	STA FNARG3
	JSR PRINTCHAR	
	LDX #$13					;DRAW ROOM DIFFICULTY SYMBOL
	LDY #$10					
	LDA #PLAYER0
	STA FNARG3
	JSR PRINTCHAR	
		
proomPUTGOOMBA
	LDA RANDOM
	ROR
	ROR
	AND #$0F
	STA FNARG1
	LDA RANDOM2
	ROR
	ROR
	AND #$0F	
	STA FNARG2
	JSR FINDATXY
	BNE proomPUTGOOMBA
	
	LDY FNARG2
	LDX FNARG1
	
	LDA RANDOM
	AND RETARG1
	CLC
	ADC #GOOMBA1
	CMP #ALTAR
	BMI proomCHAROK
	LDA #$01
proomCHAROK
	STA FNARG3
	JSR PRINTCHAR
	DEC RETARG1
	LDA RETARG1
	BNE proomPUTGOOMBA
	
	
	
	LDX #$05
	LDY #$09					;PLANT goomba 1
	LDA #GOOMBA1
	STA FNARG3
	JSR PRINTCHAR					

	JMP DRAWSCORE
	
proomBASE
;----------	COLOURS

	LDA #$06
	STA RETARG3						;SET COLOUR TO PRINT
	LDA PLANSSTATUS					;LOAD PLANS BYTE
	
proomCOL
	LDX #$04		
	LDY #$04		
	ROR
	BCC proomPC0
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A
	
proomPC0
	LDX #$04			
	LDY #$0D
	ROR
	BCC proomPC1
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC1
	LDX #$0D		
	LDY #$04
	ROR
	BCC proomPC2
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC2
	LDX #$0D			
	LDY #$0D
	ROR
	BCC proomPC3
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC3
	LDX #$06			
	LDY #$06
	ROR
	BCC proomPC4
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC4	
	LDX #$06			
	LDY #$0B
	ROR
	BCC proomPC5
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC5	
	LDX #$0B			
	LDY #$06
	ROR
	BCC proomPC6
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC6	
	LDX #$0B	
	LDY #$0B
	ROR
	BCC proomPC7
	JSR proomPLANCOL				;SET COLOUR IF SET
	LDA RETARG1						;RELOAD A

proomPC7	
	LDA RETARG3
	CMP #$06
	BEQ proomNEXTC
	JMP proomBASEC

proomNEXTC
	LDA #$03
	STA RETARG3
	LDA BASESTATUS
	JMP proomCOL	
	
proomPLANCOL
	STA RETARG1
	LDA RETARG3
	STA FNARG3
	JMP PRINTCOL

proomBASEC
	LDX #$04
	LDY #$04
	LDA #$10
	STA FNARG3
	JSR PRINTCHAR	
	
	LDX #$04			
	LDY #$0D
	LDA #$11
	STA FNARG3
	JSR PRINTCHAR

	LDX #$0D		
	LDY #$04
	LDA #$12
	STA FNARG3
	JSR PRINTCHAR

	LDX #$0D			
	LDY #$0D
	LDA #$13
	STA FNARG3
	JSR PRINTCHAR

	LDX #$06			
	LDY #$06
	LDA #$14
	STA FNARG3
	JSR PRINTCHAR
	
	LDX #$06			
	LDY #$0B
	LDA #$15
	STA FNARG3
	JSR PRINTCHAR
	
	LDX #$0B			
	LDY #$06
	LDA #$16
	STA FNARG3
	JSR PRINTCHAR
	
	LDX #$0B	
	LDY #$0B
	LDA #$17
	STA FNARG3
	JSR PRINTCHAR
	
	JMP DRAWSCORE
;=========================


;=========================
DRAWSCORE
	
	JSR PRINTAVATAR

	LDX #$01
	LDY #$13					; Player Icon	
	LDA #$18
	CLC
	ADC HEALTH
	STA FNARG3
	JSR PRINTCHAR	
	
	LDX #$01
	LDY #$15					; food score #
	LDA #$30
	CLC
	ADC HEALTH
	STA FNARG3
	JSR PRINTCHAR				
	

	LDX #$03
	LDY #$13					; food score icon
	LDA #FOOD
	STA FNARG3
	JSR PRINTCHAR				

	LDX #$03
	LDY #$15					; food score #
	LDA #$30
	CLC
	ADC MEAT
	STA FNARG3
	JSR PRINTCHAR				
	
	LDX #$05
	LDY #$13					; gold score icon
	LDA #COIN
	STA FNARG3
	JSR PRINTCHAR	
		
	LDX #$05
	LDY #$15					; gold score #
	LDA #$30
	CLC
	ADC GOLD
	STA FNARG3
	JSR PRINTCHAR				
	
	JMP LOOP
;=========================\/

;=========================
PRINTAVATAR

	LDX XCOORD					;print player avatar
	LDY YCOORD
	LDA #$18
	CLC
	ADC HEALTH
	STA FNARG3
	JMP PRINTCHAR
	
;=========================

;=========================
CLEARAVATAR

	LDX XCOORD					;print player avatar
	LDY YCOORD
	LDA #$00
	STA FNARG3
	JMP PRINTCHAR
	
;=========================


;=========================
PRINTCOL							;Prints Char FNARG3 at Y, X
	LDA #$96						;high order screen mem address low in $01
	STA HIGHORDER
	LDA #$00
	STA LOWORDER
	JMP printcINCY
	
;=========================
PRINTCHAR							;Prints Char FNARG3 at Y, X
	LDA #$1E						;high order screen mem address low in $01
	STA HIGHORDER
	LDA #$00
	STA LOWORDER

printcINCY
	CPX #$00
	BEQ STORECHAR
	CLC
	ADC #$16
	STA $01
	BCS printcINCX
printcDONEX
	DEX
	JMP printcINCY
	
printcINCX
	INC $02
	JMP printcDONEX

STORECHAR
	LDA FNARG3						;prints char FNARG3 at (y,x)
	STA ($01),Y	
	RTS
;=========================


;=========================
CLEARCHARS
	LDA #$00				;This program sets the color of every char to 
	STA LOWORDER			;save low order byte
	LDA #$1E				;save high order byte
	STA HIGHORDER	
	LDX #$0					;set x,y=0. x is for y cord, y is or x cord :(
	LDY #$0
	LDA FNARG3				;SET COLOR TO CLEAR TO
	JMP CLEARLOOP
;-----
CLEARCOLOUR
	LDA #$00			;This method sets the color of every char to 7 then fills the screen to test
	STA LOWORDER		;save low order byte
	LDA #$96			;save high order byte
	STA HIGHORDER	
	LDX #$0				;set x,y=0. x is for y cord, y is or x cord :(
	LDY #$0
	LDA FNARG3			;SET COLOR TO CLEAR TO
;-----\/
CLEARLOOP
	STA ($01),Y			; set color/char of current pos
	INY					; inc y
	CPY #$16			; compare y to 22
	BEQ clearINCY		; inc y if at EOL
clearDONEY
	CPX #$17			; check x
	BNE CLEARLOOP		; reloop if not done
	RTS					; RETURN

clearINCY	
	LDY #$00			;reset y and add 22 to low byte of address reg
	LDA #$16
	CLC					; Clear carry to not add carry bit
	ADC $01				; add 22 to low byte with carry
	STA $01				; store new 
	BCS clearINCX		; add to high order byte if carry
	LDA FNARG3			; reload color to put on screen
	JMP clearDONEY

clearINCX
	INC $02				;adds 1 to high order byte of address
	LDA FNARG3
	INX
	JMP clearDONEY
;=========================


;=========================
CUSTGRAPHICS 	
	LDA #$FF			; set graphics area to $1C00
	STA $9005
 
;Load # char-rom into char map

	LDY #$00
ROMLOOP
	LDA $8180,Y
	STA $1D80,Y
	INY
	CPY #$80
	BNE ROMLOOP	
	
	LDY #$00
CHARLOOP
	LDA $1B10,Y
	STA $1C08,Y
	INY 
	CPY #$F0
	BNE CHARLOOP		
		
	JMP DRAWBOARD
	
TITLESCREEN
	LDA #$Ff			; set graphics area to $1C00;
	STA $9005
	
	LDA #$0A
	STA FNARG3
	JSR CLEARCOLOUR

	LDA #$00
	STA FNARG3
	JSR CLEARCHARS

	LDA #$06
	STA XCOORD
	STA YCOORD
TITLECHARLOOP	
	INC FNARG3
	LDX XCOORD
	LDY YCOORD
	JSR PRINTCHAR
	INC YCOORD	
	LDA YCOORD
	CMP #$10
	BEQ TITLENEXTY
	JMP TITLECHARLOOP
TITLENEXTY
	LDA #$06
	STA YCOORD
	INC XCOORD
	LDA XCOORD
	CMP #$0D
	BNE TITLECHARLOOP
	
	
TITLESCREENLOOP 	
	LDA JOYSTICK1					;LOAD JOYSTICK1
	ASL						;WANT TO PUT THE BUTTONS IN BIT 7 FOR EASY BRANCH
	ASL						;
	ASL						;LAST SHIFT SETS CARRY IF BUTTON IS NOT PRESSED
	BCC STARTGAME
	JMP TITLESCREENLOOP
STARTGAME
	JMP PLAYERINIT



	hex 00 01 02 03 04 05
	
	
;DO NOT TOUCH THESE----------------------------------------------------------
	hex 00 01 02 03 04 05 06 07 
		
	hex 3C 42 A5 81 99 A5 42 3C		;CHARSET
	hex 44 24 22 02 54 41 2A 2A
	hex 08 1C 3C 7E EF FF 1C 1C
	hex 42 3C 42 A5 81 5A 3C E7
	
	hex 42 24 5A 66 42 5A 3C 66
	hex 5A 24 A5 5A 42 DB A5 66
	hex 24 66 7E 81 99 24 5A 18
	hex 24 7E 5A 7E 3C 66 24 24
	
	hex 3C 7E DB 7E 7E 66 24 24
	hex 7E FF DB 7E 7E E7 A5 A5
	hex 7E FF DB FF FF FF A5 A5
	hex 02 03 1C 7C 8C A8 C8 70
	
	hex 40 C0 38 3E 31 15 13 0E
	hex 18 66 52 9D B9 4A 66 18
	hex 18 66 4A B9 9D 52 66 18
	hex 00 00 00 18 7E C3 5A DB
	
	hex 3C 66 99 BD BD 99 66 3C
	hex 3C C3 A5 99 BD BD A5 A5
	hex 98 19 24 24 5A 7E FF FF
	hex 42 C3 24 18 00 7E 99 18
	
	hex 3C 42 99 42 24 99 42 BD
	hex 81 24 DB 24 24 DB 24 81
	hex FF FF 4A 40 12 42 08 42
	hex 3C 42 A5 42 24 24 DB 42
	
	hex 3C 42 A5 81 A5 99 42 3C
	hex FF DB A5 81 A5 99 42 3C
	hex FF DB A5 81 A5 99 C3 FF
	hex 18 18 18 3C 3C 18 18 18
	
	hex 00 00 18 FF FF 18 00 00
	hex 00 00 18 3C 3C 18 00 00		;CHARSET END

	
	hex 00 00 00 00 00 00 00 00		;TITLE CHAR SET, THIS SHOULD ALIGN TO 1C00
	
	hex  7F 7F 7F 2F 2F 2C 2C 2C
	hex  FC FC FC 1C 2C 2C 2C 2C
	hex  90 91 FF B3 B3 B3 B3 B0
	hex  3C 3F 33 33 3F 3F 30 30
	hex  00 03 0F 0C 0C 0C 0F 0F
	hex  00 F0 FC CC CC CC 7C F0
	hex  30 3C F3 C3 C3 C3 FF C3
	hex  30 33 3F 30 30 30 30 30
	hex  00 C0 F0 33 33 03 0F 0C
	hex  05 05 05 F5 3D 0D 0D 0D

	hex  2C 2C 2C 2C 2C 2E 2E 2F
	hex  2C 2C 2C 2C 2C AC FC FC
	hex  B2 B2 30 30 80 00 00 00
	hex  30 0C 0C 01 00 00 00 00
	hex  0D 0D 0C 0C 4C 0C 8C 80
	hex  10 10 00 00 00 80 00 00
	hex  C3 03 03 03 03 03 03 00
	hex  30 30 30 30 30 00 00 00
	hex  0F 0F 0C 0C 0C 0C 07 03
	hex  0C FC 00 00 00 00 00 F0

	hex  2C 2C 2C 2C 2C 2C 2C 2C
	hex  00 00 00 00 3C FF 3F 30
	hex  00 00 00 00 00 F0 C0 C0
	hex  00 00 00 00 00 00 00 00
	hex  08 00 00 00 00 00 00 C0
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00

	hex  2C 2C 2C 28 20 20 00 00
	hex  30 30 30 30 30 30 30 30
	hex  C0 C0 C0 C0 C0 C0 C0 C0
	hex  00 00 00 00 00 00 00 00
	hex  C0 F0 FF F0 F0 F0 F0 F0
	hex  00 00 C0 C3 F0 30 30 30
	hex  00 00 C0 F0 C0 00 C0 C0
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00

	hex  08 08 20 00 20 08 00 20
	hex  FF 3F 0F 0C 00 00 00 00
	hex  F0 C0 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  F0 F0 F0 F0 F0 F0 F0 FF
	hex  30 30 30 30 30 30 F0 C0
	hex  C0 C3 C3 C3 C3 C3 C3 C3
	hex  00 FF 00 00 00 00 00 FC
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00

	hex  00 00 08 28 20 20 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  F0 C0 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00
	hex  C3 C3 C3 03 03 03 00 00
	hex  F0 C0 00 00 00 FF 00 00
	hex  00 00 00 00 00 00 00 00
	hex  00 00 00 00 00 00 00 00






	hex 00 2A AA AA AA AA AA 2A
	hex 00 00 AA AA AA AA AA AA
	hex 00 A8 AA AA AA AA AA A8




